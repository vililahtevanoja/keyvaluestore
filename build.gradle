plugins {
	id 'org.springframework.boot' version '2.1.7.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
    id "com.github.spotbugs" version "2.0.0"
}

group = 'fi.lahtevanoja'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '12'
targetCompatibility = '12'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.apache.commons:commons-lang3:3.9'
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	runtimeOnly 'org.postgresql:postgresql'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
    testCompile 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

}

test {
	useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        html {
            enabled = true
        }
        xml {
            enabled = false
        }
    }
}

//checkstyle {
//    // assign the latest checkstyle version explicitly
//    // default version is very old, likes 5.9
//    toolVersion = '8.24'
//    // checkstyle.xml copy from:
//    // https://raw.githubusercontent.com/checkstyle/checkstyle/checkstyle-8.6/src/main/resources/google_checks.xml
//    // the version should be as same as plugin version
//    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
//}